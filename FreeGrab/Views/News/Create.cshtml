@model FreeGrab.Models.News


<script src="https://cloud.tinymce.com/stable/tinymce.min.js"></script>


<link rel='stylesheet' href='~/Content/Form/Graber.css' type='text/css' />
<div class="bg-contact2" style="background-image: url('/Content/Home/img/4.jpg');">
    <div class="container-contact2">
        <div class="wrap-contact2">


            @using (Html.BeginForm("Create", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <span class="contact2-form-title">
                        CREATED YOUR NEWSES
                    </span>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2 textform" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control textform" } })
                            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">

                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = " control-label col-md-2 textform" })

                        <div class="editor-field ">

                            @Html.TextAreaFor(model => model.Content)
                            @Html.ValidationMessageFor(model => model.Content)
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.TypeId, "TypeId", htmlAttributes: new { @class = "control-label col-md-2 textform" })
                        <div class="col-md-10">
                            @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control textform" })
                            @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group" row>
                        <label class="col-md-2 control-label textform">Photo</label>
                        <div class="col-md-10 ">
                            <input type="file" id="files" name="files" onchange="" multiple class="form-control textform" />
                            <div id="dvPreview" class="textform">


                            </div>
                        </div>
                    </div>

                    <div class="form-group ">
                        <div class="col-md-offset-2 col-md-6">
                            <input type="submit" value="PICK UP" class="btn btn-default textform" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index", null, new { @class = "textform" })
            </div>



        </div>
    </div>
</div>


<script src="~/scripts/tiny.js"></script>
<script src="~/Scripts/tinymce/js/tinymce/jquery.tinymce.min.js"></script>
<script language="javascript" type="text/javascript">
    $(function () {
        $("#files").change(function () {
            if (typeof (FileReader) != "undefined") {
                var dvPreview = $("#dvPreview");
                dvPreview.html("");
                var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp)$/;
                $($(this)[0].files).each(function () {
                    var file = $(this);
                    if (regex.test(file[0].name.toLowerCase())) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            var img = $("<img />");
                            img.attr("style", "height:100px;width: 100px");
                            img.attr("src", e.target.result);
                            dvPreview.append(img);
                        }
                        reader.readAsDataURL(file[0]);
                    } else {
                        alert(file[0].name + " is not a valid image file.");
                        dvPreview.html("");
                        return false;
                    }
                });
            } else {
                alert("This browser does not support HTML5 FileReader.");
            }
        });
    });
</script>



